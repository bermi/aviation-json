#!/usr/bin/env node

"use strict";

var program = require("commander");
var version = require("../package.json").version;

var scrapeJs = require("./scrape.js");
var reduceAirlines = scrapeJs.reduceAirlines;
var reduceAirports = scrapeJs.reduceAirports;
var reduceDestinations = scrapeJs.reduceDestinations;

var destinationsRaw = require("../tmp/airline_destinations.json");
var airportsRaw = require("../tmp/airports.json");
var airlinesRaw = require("../tmp/airlines_data.json");

var DESTINATIONS_FILE = "./data/airline_destinations.json";
var AIRPORTS_FILE = "./data/airports.json";
var AIRLINES_FILE = "./data/airlines.json";


var fs = require("fs");
var destinations, airports, airlines;

program
  .version(version)
  .description("This package uses aviation-scraper to get the information and prepare it for a database usage")
  .option("-d, --destinations", "generates the destinations with only the primary keys.")
  .option("-a, --airports", "generates the airports file.")
  .option("-c, --companies", "generates the airlines file")
  .parse(process.argv);

if (!program.destinations && !program.airports && !program.companies) {
  program.help();
}

if (program.companies) {
  airlines = reduceAirlines(airlinesRaw);
  saveFile(AIRLINES_FILE, airlines, logDone);
}

if (program.destinations){
  destinations = reduceDestinations(destinationsRaw);
  saveFile(DESTINATIONS_FILE, destinations, logDone);
}

if (program.airports) {
  airports = reduceAirports(airportsRaw);
  console.log(airports);

  saveFile(AIRPORTS_FILE, airports, logDone);
}

function logDone() {
  console.log("file Saved");
}

function saveFile(dir, data, callback) {
  fs.writeFile(dir, JSON.stringify(data,null, 2), function(err) {
    if (err) {throw err;}
    callback();
  });
  
}
